
Rover-bot.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000004da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000486  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000004da  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000050c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  0000054c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000fb3  00000000  00000000  000005a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000d8f  00000000  00000000  00001557  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000521  00000000  00000000  000022e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a8  00000000  00000000  00002808  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000064e  00000000  00000000  000028b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000251  00000000  00000000  00002efe  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  0000314f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7d c0       	rjmp	.+250    	; 0x124 <__vector_10>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e6 e8       	ldi	r30, 0x86	; 134
  fc:	f4 e0       	ldi	r31, 0x04	; 4
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 30       	cpi	r26, 0x00	; 0
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a0 e0       	ldi	r26, 0x00	; 0
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a0 30       	cpi	r26, 0x00	; 0
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	83 d0       	rcall	.+262    	; 0x226 <main>
 120:	b0 c1       	rjmp	.+864    	; 0x482 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <__vector_10>:
	} else if (wheelNumber == R_WHEEL && direction == FORWARD) {
		PORTC &= 0xFC;
		PORTC |=  R_FORWARD;
	} else if (wheelNumber == R_WHEEL && direction == BACKWARD) {
		PORTC &= 0xFC;
		PORTC |=  R_BACKWARD;
 124:	1f 92       	push	r1
 126:	0f 92       	push	r0
 128:	0f b6       	in	r0, 0x3f	; 63
 12a:	0f 92       	push	r0
 12c:	11 24       	eor	r1, r1
 12e:	8f 93       	push	r24
 130:	85 b1       	in	r24, 0x05	; 5
 132:	80 58       	subi	r24, 0x80	; 128
 134:	85 b9       	out	0x05, r24	; 5
 136:	8f 91       	pop	r24
 138:	0f 90       	pop	r0
 13a:	0f be       	out	0x3f, r0	; 63
 13c:	0f 90       	pop	r0
 13e:	1f 90       	pop	r1
 140:	18 95       	reti

00000142 <initWheels>:
 142:	87 b1       	in	r24, 0x07	; 7
 144:	8f 60       	ori	r24, 0x0F	; 15
 146:	87 b9       	out	0x07, r24	; 7
 148:	ea e0       	ldi	r30, 0x0A	; 10
 14a:	f1 e0       	ldi	r31, 0x01	; 1
 14c:	80 81       	ld	r24, Z
 14e:	88 61       	ori	r24, 0x18	; 24
 150:	80 83       	st	Z, r24
 152:	88 ee       	ldi	r24, 0xE8	; 232
 154:	93 e0       	ldi	r25, 0x03	; 3
 156:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__TEXT_REGION_LENGTH__+0x700127>
 15a:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__TEXT_REGION_LENGTH__+0x700126>
 15e:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
 162:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
 166:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <__TEXT_REGION_LENGTH__+0x70012b>
 16a:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>
 16e:	e0 e2       	ldi	r30, 0x20	; 32
 170:	f1 e0       	ldi	r31, 0x01	; 1
 172:	80 81       	ld	r24, Z
 174:	80 6a       	ori	r24, 0xA0	; 160
 176:	80 83       	st	Z, r24
 178:	e1 e2       	ldi	r30, 0x21	; 33
 17a:	f1 e0       	ldi	r31, 0x01	; 1
 17c:	80 81       	ld	r24, Z
 17e:	82 61       	ori	r24, 0x12	; 18
 180:	80 83       	st	Z, r24
 182:	42 9a       	sbi	0x08, 2	; 8
 184:	41 9a       	sbi	0x08, 1	; 8
 186:	e5 e0       	ldi	r30, 0x05	; 5
 188:	f1 e0       	ldi	r31, 0x01	; 1
 18a:	80 81       	ld	r24, Z
 18c:	8c 7f       	andi	r24, 0xFC	; 252
 18e:	80 83       	st	Z, r24
 190:	ec e6       	ldi	r30, 0x6C	; 108
 192:	f0 e0       	ldi	r31, 0x00	; 0
 194:	80 81       	ld	r24, Z
 196:	82 60       	ori	r24, 0x02	; 2
 198:	80 83       	st	Z, r24
 19a:	80 81       	ld	r24, Z
 19c:	84 60       	ori	r24, 0x04	; 4
 19e:	80 83       	st	Z, r24
 1a0:	e8 e6       	ldi	r30, 0x68	; 104
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	80 81       	ld	r24, Z
 1a6:	82 60       	ori	r24, 0x02	; 2
 1a8:	80 83       	st	Z, r24
 1aa:	08 95       	ret

000001ac <setDutyCycle>:
	}

}

// setDutyCycle accepts a dutycycle (number between 0.0 and 1.0) and the wheel (L_WHEEL or R_WHEEL)
void setDutyCycle(float dutycycle, int wheel) {
 1ac:	cf 92       	push	r12
 1ae:	df 92       	push	r13
 1b0:	ef 92       	push	r14
 1b2:	ff 92       	push	r15
 1b4:	cf 93       	push	r28
 1b6:	df 93       	push	r29
 1b8:	6b 01       	movw	r12, r22
 1ba:	7c 01       	movw	r14, r24
 1bc:	ea 01       	movw	r28, r20
	
	if (dutycycle == 0) {
 1be:	20 e0       	ldi	r18, 0x00	; 0
 1c0:	30 e0       	ldi	r19, 0x00	; 0
 1c2:	a9 01       	movw	r20, r18
 1c4:	51 d0       	rcall	.+162    	; 0x268 <__cmpsf2>
 1c6:	81 11       	cpse	r24, r1
 1c8:	0f c0       	rjmp	.+30     	; 0x1e8 <setDutyCycle+0x3c>
		if (wheel == L_WHEEL) OCR5A = 0;
 1ca:	c1 30       	cpi	r28, 0x01	; 1
 1cc:	d1 05       	cpc	r29, r1
 1ce:	29 f4       	brne	.+10     	; 0x1da <setDutyCycle+0x2e>
 1d0:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
 1d4:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
 1d8:	1f c0       	rjmp	.+62     	; 0x218 <setDutyCycle+0x6c>
		else if (wheel == R_WHEEL) OCR5B = 0;
 1da:	cd 2b       	or	r28, r29
 1dc:	e9 f4       	brne	.+58     	; 0x218 <setDutyCycle+0x6c>
 1de:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <__TEXT_REGION_LENGTH__+0x70012b>
 1e2:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>
 1e6:	18 c0       	rjmp	.+48     	; 0x218 <setDutyCycle+0x6c>
	} else {
		int ontime = ((int)(dutycycle * 400.0) + 400) ;
 1e8:	20 e0       	ldi	r18, 0x00	; 0
 1ea:	30 e0       	ldi	r19, 0x00	; 0
 1ec:	48 ec       	ldi	r20, 0xC8	; 200
 1ee:	53 e4       	ldi	r21, 0x43	; 67
 1f0:	c7 01       	movw	r24, r14
 1f2:	b6 01       	movw	r22, r12
 1f4:	bb d0       	rcall	.+374    	; 0x36c <__mulsf3>
 1f6:	3c d0       	rcall	.+120    	; 0x270 <__fixsfsi>
 1f8:	60 57       	subi	r22, 0x70	; 112
 1fa:	7e 4f       	sbci	r23, 0xFE	; 254
		
		if (wheel == L_WHEEL) OCR5A = ontime;
 1fc:	c1 30       	cpi	r28, 0x01	; 1
 1fe:	d1 05       	cpc	r29, r1
 200:	29 f4       	brne	.+10     	; 0x20c <setDutyCycle+0x60>
 202:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
 206:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
 20a:	06 c0       	rjmp	.+12     	; 0x218 <setDutyCycle+0x6c>
		else if (wheel == R_WHEEL) OCR5B = ontime;
 20c:	cd 2b       	or	r28, r29
 20e:	21 f4       	brne	.+8      	; 0x218 <setDutyCycle+0x6c>
 210:	70 93 2b 01 	sts	0x012B, r23	; 0x80012b <__TEXT_REGION_LENGTH__+0x70012b>
 214:	60 93 2a 01 	sts	0x012A, r22	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>
	}
}
 218:	df 91       	pop	r29
 21a:	cf 91       	pop	r28
 21c:	ff 90       	pop	r15
 21e:	ef 90       	pop	r14
 220:	df 90       	pop	r13
 222:	cf 90       	pop	r12
 224:	08 95       	ret

00000226 <main>:


int main(void)
{
//PORTB |= 0x80;
	initWheels();
 226:	8d df       	rcall	.-230    	; 0x142 <initWheels>
	DDRB = 0x80;
 228:	80 e8       	ldi	r24, 0x80	; 128
 22a:	84 b9       	out	0x04, r24	; 4
	PORTJ &= ~(1 << PJ1);
 22c:	e5 e0       	ldi	r30, 0x05	; 5
 22e:	f1 e0       	ldi	r31, 0x01	; 1
 230:	80 81       	ld	r24, Z
 232:	8d 7f       	andi	r24, 0xFD	; 253
 234:	80 83       	st	Z, r24
	sei();
 236:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 238:	2f ef       	ldi	r18, 0xFF	; 255
 23a:	83 ed       	ldi	r24, 0xD3	; 211
 23c:	90 e3       	ldi	r25, 0x30	; 48
 23e:	21 50       	subi	r18, 0x01	; 1
 240:	80 40       	sbci	r24, 0x00	; 0
 242:	90 40       	sbci	r25, 0x00	; 0
 244:	e1 f7       	brne	.-8      	; 0x23e <main+0x18>
 246:	00 c0       	rjmp	.+0      	; 0x248 <main+0x22>
 248:	00 00       	nop

/* Replace with your application code */
	_delay_ms(1000);
	//changeDirection(FORWARD, L_WHEEL);
	
	setDutyCycle(.2, L_WHEEL);
 24a:	41 e0       	ldi	r20, 0x01	; 1
 24c:	50 e0       	ldi	r21, 0x00	; 0
 24e:	6d ec       	ldi	r22, 0xCD	; 205
 250:	7c ec       	ldi	r23, 0xCC	; 204
 252:	8c e4       	ldi	r24, 0x4C	; 76
 254:	9e e3       	ldi	r25, 0x3E	; 62
 256:	aa df       	rcall	.-172    	; 0x1ac <setDutyCycle>
	setDutyCycle(.2, R_WHEEL);
 258:	40 e0       	ldi	r20, 0x00	; 0
 25a:	50 e0       	ldi	r21, 0x00	; 0
 25c:	6d ec       	ldi	r22, 0xCD	; 205
 25e:	7c ec       	ldi	r23, 0xCC	; 204
 260:	8c e4       	ldi	r24, 0x4C	; 76
 262:	9e e3       	ldi	r25, 0x3E	; 62
 264:	a3 df       	rcall	.-186    	; 0x1ac <setDutyCycle>
 266:	ff cf       	rjmp	.-2      	; 0x266 <main+0x40>

00000268 <__cmpsf2>:
 268:	34 d0       	rcall	.+104    	; 0x2d2 <__fp_cmp>
 26a:	08 f4       	brcc	.+2      	; 0x26e <__cmpsf2+0x6>
 26c:	81 e0       	ldi	r24, 0x01	; 1
 26e:	08 95       	ret

00000270 <__fixsfsi>:
 270:	04 d0       	rcall	.+8      	; 0x27a <__fixunssfsi>
 272:	68 94       	set
 274:	b1 11       	cpse	r27, r1
 276:	74 c0       	rjmp	.+232    	; 0x360 <__fp_szero>
 278:	08 95       	ret

0000027a <__fixunssfsi>:
 27a:	57 d0       	rcall	.+174    	; 0x32a <__fp_splitA>
 27c:	88 f0       	brcs	.+34     	; 0x2a0 <__fixunssfsi+0x26>
 27e:	9f 57       	subi	r25, 0x7F	; 127
 280:	90 f0       	brcs	.+36     	; 0x2a6 <__fixunssfsi+0x2c>
 282:	b9 2f       	mov	r27, r25
 284:	99 27       	eor	r25, r25
 286:	b7 51       	subi	r27, 0x17	; 23
 288:	a0 f0       	brcs	.+40     	; 0x2b2 <__fixunssfsi+0x38>
 28a:	d1 f0       	breq	.+52     	; 0x2c0 <__fixunssfsi+0x46>
 28c:	66 0f       	add	r22, r22
 28e:	77 1f       	adc	r23, r23
 290:	88 1f       	adc	r24, r24
 292:	99 1f       	adc	r25, r25
 294:	1a f0       	brmi	.+6      	; 0x29c <__fixunssfsi+0x22>
 296:	ba 95       	dec	r27
 298:	c9 f7       	brne	.-14     	; 0x28c <__fixunssfsi+0x12>
 29a:	12 c0       	rjmp	.+36     	; 0x2c0 <__fixunssfsi+0x46>
 29c:	b1 30       	cpi	r27, 0x01	; 1
 29e:	81 f0       	breq	.+32     	; 0x2c0 <__fixunssfsi+0x46>
 2a0:	5e d0       	rcall	.+188    	; 0x35e <__fp_zero>
 2a2:	b1 e0       	ldi	r27, 0x01	; 1
 2a4:	08 95       	ret
 2a6:	5b c0       	rjmp	.+182    	; 0x35e <__fp_zero>
 2a8:	67 2f       	mov	r22, r23
 2aa:	78 2f       	mov	r23, r24
 2ac:	88 27       	eor	r24, r24
 2ae:	b8 5f       	subi	r27, 0xF8	; 248
 2b0:	39 f0       	breq	.+14     	; 0x2c0 <__fixunssfsi+0x46>
 2b2:	b9 3f       	cpi	r27, 0xF9	; 249
 2b4:	cc f3       	brlt	.-14     	; 0x2a8 <__fixunssfsi+0x2e>
 2b6:	86 95       	lsr	r24
 2b8:	77 95       	ror	r23
 2ba:	67 95       	ror	r22
 2bc:	b3 95       	inc	r27
 2be:	d9 f7       	brne	.-10     	; 0x2b6 <__fixunssfsi+0x3c>
 2c0:	3e f4       	brtc	.+14     	; 0x2d0 <__fixunssfsi+0x56>
 2c2:	90 95       	com	r25
 2c4:	80 95       	com	r24
 2c6:	70 95       	com	r23
 2c8:	61 95       	neg	r22
 2ca:	7f 4f       	sbci	r23, 0xFF	; 255
 2cc:	8f 4f       	sbci	r24, 0xFF	; 255
 2ce:	9f 4f       	sbci	r25, 0xFF	; 255
 2d0:	08 95       	ret

000002d2 <__fp_cmp>:
 2d2:	99 0f       	add	r25, r25
 2d4:	00 08       	sbc	r0, r0
 2d6:	55 0f       	add	r21, r21
 2d8:	aa 0b       	sbc	r26, r26
 2da:	e0 e8       	ldi	r30, 0x80	; 128
 2dc:	fe ef       	ldi	r31, 0xFE	; 254
 2de:	16 16       	cp	r1, r22
 2e0:	17 06       	cpc	r1, r23
 2e2:	e8 07       	cpc	r30, r24
 2e4:	f9 07       	cpc	r31, r25
 2e6:	c0 f0       	brcs	.+48     	; 0x318 <__fp_cmp+0x46>
 2e8:	12 16       	cp	r1, r18
 2ea:	13 06       	cpc	r1, r19
 2ec:	e4 07       	cpc	r30, r20
 2ee:	f5 07       	cpc	r31, r21
 2f0:	98 f0       	brcs	.+38     	; 0x318 <__fp_cmp+0x46>
 2f2:	62 1b       	sub	r22, r18
 2f4:	73 0b       	sbc	r23, r19
 2f6:	84 0b       	sbc	r24, r20
 2f8:	95 0b       	sbc	r25, r21
 2fa:	39 f4       	brne	.+14     	; 0x30a <__fp_cmp+0x38>
 2fc:	0a 26       	eor	r0, r26
 2fe:	61 f0       	breq	.+24     	; 0x318 <__fp_cmp+0x46>
 300:	23 2b       	or	r18, r19
 302:	24 2b       	or	r18, r20
 304:	25 2b       	or	r18, r21
 306:	21 f4       	brne	.+8      	; 0x310 <__fp_cmp+0x3e>
 308:	08 95       	ret
 30a:	0a 26       	eor	r0, r26
 30c:	09 f4       	brne	.+2      	; 0x310 <__fp_cmp+0x3e>
 30e:	a1 40       	sbci	r26, 0x01	; 1
 310:	a6 95       	lsr	r26
 312:	8f ef       	ldi	r24, 0xFF	; 255
 314:	81 1d       	adc	r24, r1
 316:	81 1d       	adc	r24, r1
 318:	08 95       	ret

0000031a <__fp_split3>:
 31a:	57 fd       	sbrc	r21, 7
 31c:	90 58       	subi	r25, 0x80	; 128
 31e:	44 0f       	add	r20, r20
 320:	55 1f       	adc	r21, r21
 322:	59 f0       	breq	.+22     	; 0x33a <__fp_splitA+0x10>
 324:	5f 3f       	cpi	r21, 0xFF	; 255
 326:	71 f0       	breq	.+28     	; 0x344 <__fp_splitA+0x1a>
 328:	47 95       	ror	r20

0000032a <__fp_splitA>:
 32a:	88 0f       	add	r24, r24
 32c:	97 fb       	bst	r25, 7
 32e:	99 1f       	adc	r25, r25
 330:	61 f0       	breq	.+24     	; 0x34a <__fp_splitA+0x20>
 332:	9f 3f       	cpi	r25, 0xFF	; 255
 334:	79 f0       	breq	.+30     	; 0x354 <__fp_splitA+0x2a>
 336:	87 95       	ror	r24
 338:	08 95       	ret
 33a:	12 16       	cp	r1, r18
 33c:	13 06       	cpc	r1, r19
 33e:	14 06       	cpc	r1, r20
 340:	55 1f       	adc	r21, r21
 342:	f2 cf       	rjmp	.-28     	; 0x328 <__fp_split3+0xe>
 344:	46 95       	lsr	r20
 346:	f1 df       	rcall	.-30     	; 0x32a <__fp_splitA>
 348:	08 c0       	rjmp	.+16     	; 0x35a <__fp_splitA+0x30>
 34a:	16 16       	cp	r1, r22
 34c:	17 06       	cpc	r1, r23
 34e:	18 06       	cpc	r1, r24
 350:	99 1f       	adc	r25, r25
 352:	f1 cf       	rjmp	.-30     	; 0x336 <__fp_splitA+0xc>
 354:	86 95       	lsr	r24
 356:	71 05       	cpc	r23, r1
 358:	61 05       	cpc	r22, r1
 35a:	08 94       	sec
 35c:	08 95       	ret

0000035e <__fp_zero>:
 35e:	e8 94       	clt

00000360 <__fp_szero>:
 360:	bb 27       	eor	r27, r27
 362:	66 27       	eor	r22, r22
 364:	77 27       	eor	r23, r23
 366:	cb 01       	movw	r24, r22
 368:	97 f9       	bld	r25, 7
 36a:	08 95       	ret

0000036c <__mulsf3>:
 36c:	0b d0       	rcall	.+22     	; 0x384 <__mulsf3x>
 36e:	78 c0       	rjmp	.+240    	; 0x460 <__fp_round>
 370:	69 d0       	rcall	.+210    	; 0x444 <__fp_pscA>
 372:	28 f0       	brcs	.+10     	; 0x37e <__mulsf3+0x12>
 374:	6e d0       	rcall	.+220    	; 0x452 <__fp_pscB>
 376:	18 f0       	brcs	.+6      	; 0x37e <__mulsf3+0x12>
 378:	95 23       	and	r25, r21
 37a:	09 f0       	breq	.+2      	; 0x37e <__mulsf3+0x12>
 37c:	5a c0       	rjmp	.+180    	; 0x432 <__fp_inf>
 37e:	5f c0       	rjmp	.+190    	; 0x43e <__fp_nan>
 380:	11 24       	eor	r1, r1
 382:	ee cf       	rjmp	.-36     	; 0x360 <__fp_szero>

00000384 <__mulsf3x>:
 384:	ca df       	rcall	.-108    	; 0x31a <__fp_split3>
 386:	a0 f3       	brcs	.-24     	; 0x370 <__mulsf3+0x4>

00000388 <__mulsf3_pse>:
 388:	95 9f       	mul	r25, r21
 38a:	d1 f3       	breq	.-12     	; 0x380 <__mulsf3+0x14>
 38c:	95 0f       	add	r25, r21
 38e:	50 e0       	ldi	r21, 0x00	; 0
 390:	55 1f       	adc	r21, r21
 392:	62 9f       	mul	r22, r18
 394:	f0 01       	movw	r30, r0
 396:	72 9f       	mul	r23, r18
 398:	bb 27       	eor	r27, r27
 39a:	f0 0d       	add	r31, r0
 39c:	b1 1d       	adc	r27, r1
 39e:	63 9f       	mul	r22, r19
 3a0:	aa 27       	eor	r26, r26
 3a2:	f0 0d       	add	r31, r0
 3a4:	b1 1d       	adc	r27, r1
 3a6:	aa 1f       	adc	r26, r26
 3a8:	64 9f       	mul	r22, r20
 3aa:	66 27       	eor	r22, r22
 3ac:	b0 0d       	add	r27, r0
 3ae:	a1 1d       	adc	r26, r1
 3b0:	66 1f       	adc	r22, r22
 3b2:	82 9f       	mul	r24, r18
 3b4:	22 27       	eor	r18, r18
 3b6:	b0 0d       	add	r27, r0
 3b8:	a1 1d       	adc	r26, r1
 3ba:	62 1f       	adc	r22, r18
 3bc:	73 9f       	mul	r23, r19
 3be:	b0 0d       	add	r27, r0
 3c0:	a1 1d       	adc	r26, r1
 3c2:	62 1f       	adc	r22, r18
 3c4:	83 9f       	mul	r24, r19
 3c6:	a0 0d       	add	r26, r0
 3c8:	61 1d       	adc	r22, r1
 3ca:	22 1f       	adc	r18, r18
 3cc:	74 9f       	mul	r23, r20
 3ce:	33 27       	eor	r19, r19
 3d0:	a0 0d       	add	r26, r0
 3d2:	61 1d       	adc	r22, r1
 3d4:	23 1f       	adc	r18, r19
 3d6:	84 9f       	mul	r24, r20
 3d8:	60 0d       	add	r22, r0
 3da:	21 1d       	adc	r18, r1
 3dc:	82 2f       	mov	r24, r18
 3de:	76 2f       	mov	r23, r22
 3e0:	6a 2f       	mov	r22, r26
 3e2:	11 24       	eor	r1, r1
 3e4:	9f 57       	subi	r25, 0x7F	; 127
 3e6:	50 40       	sbci	r21, 0x00	; 0
 3e8:	8a f0       	brmi	.+34     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3ea:	e1 f0       	breq	.+56     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 3ec:	88 23       	and	r24, r24
 3ee:	4a f0       	brmi	.+18     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3f0:	ee 0f       	add	r30, r30
 3f2:	ff 1f       	adc	r31, r31
 3f4:	bb 1f       	adc	r27, r27
 3f6:	66 1f       	adc	r22, r22
 3f8:	77 1f       	adc	r23, r23
 3fa:	88 1f       	adc	r24, r24
 3fc:	91 50       	subi	r25, 0x01	; 1
 3fe:	50 40       	sbci	r21, 0x00	; 0
 400:	a9 f7       	brne	.-22     	; 0x3ec <__mulsf3_pse+0x64>
 402:	9e 3f       	cpi	r25, 0xFE	; 254
 404:	51 05       	cpc	r21, r1
 406:	70 f0       	brcs	.+28     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 408:	14 c0       	rjmp	.+40     	; 0x432 <__fp_inf>
 40a:	aa cf       	rjmp	.-172    	; 0x360 <__fp_szero>
 40c:	5f 3f       	cpi	r21, 0xFF	; 255
 40e:	ec f3       	brlt	.-6      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 410:	98 3e       	cpi	r25, 0xE8	; 232
 412:	dc f3       	brlt	.-10     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 414:	86 95       	lsr	r24
 416:	77 95       	ror	r23
 418:	67 95       	ror	r22
 41a:	b7 95       	ror	r27
 41c:	f7 95       	ror	r31
 41e:	e7 95       	ror	r30
 420:	9f 5f       	subi	r25, 0xFF	; 255
 422:	c1 f7       	brne	.-16     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 424:	fe 2b       	or	r31, r30
 426:	88 0f       	add	r24, r24
 428:	91 1d       	adc	r25, r1
 42a:	96 95       	lsr	r25
 42c:	87 95       	ror	r24
 42e:	97 f9       	bld	r25, 7
 430:	08 95       	ret

00000432 <__fp_inf>:
 432:	97 f9       	bld	r25, 7
 434:	9f 67       	ori	r25, 0x7F	; 127
 436:	80 e8       	ldi	r24, 0x80	; 128
 438:	70 e0       	ldi	r23, 0x00	; 0
 43a:	60 e0       	ldi	r22, 0x00	; 0
 43c:	08 95       	ret

0000043e <__fp_nan>:
 43e:	9f ef       	ldi	r25, 0xFF	; 255
 440:	80 ec       	ldi	r24, 0xC0	; 192
 442:	08 95       	ret

00000444 <__fp_pscA>:
 444:	00 24       	eor	r0, r0
 446:	0a 94       	dec	r0
 448:	16 16       	cp	r1, r22
 44a:	17 06       	cpc	r1, r23
 44c:	18 06       	cpc	r1, r24
 44e:	09 06       	cpc	r0, r25
 450:	08 95       	ret

00000452 <__fp_pscB>:
 452:	00 24       	eor	r0, r0
 454:	0a 94       	dec	r0
 456:	12 16       	cp	r1, r18
 458:	13 06       	cpc	r1, r19
 45a:	14 06       	cpc	r1, r20
 45c:	05 06       	cpc	r0, r21
 45e:	08 95       	ret

00000460 <__fp_round>:
 460:	09 2e       	mov	r0, r25
 462:	03 94       	inc	r0
 464:	00 0c       	add	r0, r0
 466:	11 f4       	brne	.+4      	; 0x46c <__fp_round+0xc>
 468:	88 23       	and	r24, r24
 46a:	52 f0       	brmi	.+20     	; 0x480 <__fp_round+0x20>
 46c:	bb 0f       	add	r27, r27
 46e:	40 f4       	brcc	.+16     	; 0x480 <__fp_round+0x20>
 470:	bf 2b       	or	r27, r31
 472:	11 f4       	brne	.+4      	; 0x478 <__fp_round+0x18>
 474:	60 ff       	sbrs	r22, 0
 476:	04 c0       	rjmp	.+8      	; 0x480 <__fp_round+0x20>
 478:	6f 5f       	subi	r22, 0xFF	; 255
 47a:	7f 4f       	sbci	r23, 0xFF	; 255
 47c:	8f 4f       	sbci	r24, 0xFF	; 255
 47e:	9f 4f       	sbci	r25, 0xFF	; 255
 480:	08 95       	ret

00000482 <_exit>:
 482:	f8 94       	cli

00000484 <__stop_program>:
 484:	ff cf       	rjmp	.-2      	; 0x484 <__stop_program>
